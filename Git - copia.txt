Establecer nombre de usuario:

git config --global user.name "lyons"

Verficar si se guardo el nombre de usuario:
git config user.name

Establecer correo:
git config --global user.email "brandon_07_01@hotmail.com"

Verficar si se guardo el correo:

git config user.email



git init
git status

Para enviar el proyecto
git add
Para enviar mas de un archivo
git add .



Guaradar proyecto:
git commit -m "Escribir un mensaje"

Eliminar proyecto ultimo guardado:
git rm --cached "Nombre archivo"

Eiminar mas de un archivo (ultimos guardados):
git rm --cached .




Fechas en las que fueron guardados los proyectos:
git log

Fechas en las que fueron guardados los proyectos (mas detalle):
git log --stat

Mostrar commit en una linea:
git log --oneline

Eliminar un commit en especifico:
git checkout nombre_commit-segun_oneline



Ramas: Se comportan como copias de seguridad

Visualizar las ramas:
git branch

Cambiar de rama

git checkout nombre_rama

crear rama: Las futuras modificaciones quw hagamos se registrararn en esta rama

git checkout -b nombre_rama



Unir ramas, es decir, unir lineas de codigo con otras ramas:
Por ejemplo, estamos en la rama master, y queremos unir los codigos con los de la rama: Rama_1.
Para esto antes debemos estar en la rama master, luego escribir el comando:

git merge Rama_1

Con esto, todas la lineas de codigo de Rama_1 se copiaran a master.
Y si deseamos, podemos guaradar los cambios en la rama master
Esto no quiere decir que la Rama_1 desaparesca. Esta sigue viva con sus respectivas codigos


Eliminar rama:

git branch -d nombre_rama-eliminar



xdddddddddddddddd


